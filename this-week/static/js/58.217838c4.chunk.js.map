{"version":3,"file":"static/js/58.217838c4.chunk.js","mappings":"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","sources":["components/atom/Input.tsx","components/atom/Box.tsx","components/atom/ButtonFrame.tsx","components/atom/Button.tsx","components/atom/Text.tsx","components/atom/Tag.tsx","components/atom/TagGroup.tsx","components/atom/Container.tsx","components/common/list/List.tsx","components/common/list/ListItem.tsx","components/common/list/ListTitle.tsx","components/common/list/ListDesc.tsx","components/common/header/Header.tsx","components/common/header/HeaderTitle.tsx","components/common/header/HeaderBack.tsx","components/common/header/HeaderIcon.tsx","components/common/headline/Headline.tsx","components/common/checkbox/Checkbox.tsx","components/common/toast/hooks/useToast.ts","components/common/input/TextInput.tsx","components/common/floatingCTA/FloatingCTA.tsx","components/common/section/Section.tsx","components/todo/TodoListItem.tsx","components/todo/TodoList.tsx","states/todoState.ts","components/todo/hooks/useTodo.ts"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nexport interface InputProps {\n  block?: boolean;\n}\n\nconst BaseStyle = css<InputProps>`\n  --input-font-size: 1.125rem;\n\n  display: inline-flex;\n  align-items: center;\n  padding: 0;\n  margin: 0;\n  height: 52px;\n\n  color: var(--color-grey-900);\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  font-weight: 500;\n  text-align: left;\n\n  border: none;\n  border-radius: 0;\n  appearance: none;\n  outline: none;\n\n  background-color: var(--color-background);\n\n  transition: border-color 0.15s ease;\n\n  ${({ block }) => {\n    if (!block) return null;\n    return `\n      display: block;\n      width: 100%;\n    `;\n  }}\n\n  &::placeholder {\n    color: var(--color-grey-400);\n    font-size: var(--input-font-size);\n  }\n`;\n\nexport const Input = styled.input`\n  ${BaseStyle}\n`;\n\nexport const StyledTextarea = styled(Input)`\n  ${BaseStyle}\n\n  resize: none;\n  width: 100%;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  min-height: 200px;\n`;\n\nexport const Textarea = StyledTextarea.withComponent('textarea');\n","import styled from 'styled-components';\nimport {\n  compose,\n  position,\n  PositionProps,\n  space,\n  SpaceProps,\n  typography,\n  TypographyProps,\n  shadow,\n  ShadowProps,\n  background,\n  BackgroundProps,\n  border,\n  BorderProps,\n  flexbox,\n  FlexboxProps,\n  layout,\n  LayoutProps,\n  color,\n  ColorProps,\n} from 'styled-system';\n\ntype Props = PositionProps &\n  SpaceProps &\n  TypographyProps &\n  BackgroundProps &\n  ShadowProps &\n  BorderProps &\n  FlexboxProps &\n  LayoutProps &\n  ColorProps;\n\nexport const Box = styled.div<Props>`\n  ${compose(\n    position,\n    space,\n    typography,\n    shadow,\n    background,\n    border,\n    flexbox,\n    layout,\n    color,\n  )}\n`;\n","import styled, { css } from 'styled-components';\n\nexport interface ButtonFrameProps {\n  size?: 'small' | 'medium' | 'large' | 'xlarge';\n  $round?: boolean;\n  $block?: boolean;\n}\n\nconst ButtonRounded = css`\n  border-radius: 500px;\n`;\nconst ButtonBlocked = css`\n  display: flex;\n  width: 100%;\n`;\n\nconst ButtonSizeXlarge = css`\n  font-size: 1.125rem;\n  height: 58px;\n  padding-left: 1.25rem;\n  padding-right: 1.25rem;\n  border-radius: 10px;\n`;\nconst ButtonSizeLarge = css`\n  font-size: 1rem;\n  height: 3rem;\n  padding-left: 1.25rem;\n  padding-right: 1.25rem;\n  border-radius: 10px;\n`;\nconst ButtonSizeMedium = css``;\nconst ButtonSizeSmall = css`\n  font-size: 0.875rem;\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n  height: 2rem;\n`;\n\nexport const ButtonFrame = styled.button<ButtonFrameProps>`\n  cursor: pointer;\n  user-select: none;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 2.25rem;\n  padding: 0 1rem;\n\n  color: var(--color-grey-700);\n  font-size: 0.875rem;\n  font-weight: 600;\n  line-height: 1;\n  text-decoration: none;\n\n  border-radius: 6px;\n  border: 1px solid var(--color-grey-100);\n  background: var(--color-grey-100);\n\n  appearance: none;\n  outline: none;\n\n  transition: 0.2s ease;\n\n  ${({ size }) => {\n    switch (size) {\n      case 'xlarge':\n        return ButtonSizeXlarge;\n      case 'large':\n        return ButtonSizeLarge;\n      case 'small':\n        return ButtonSizeSmall;\n      default:\n        return ButtonSizeMedium;\n    }\n  }}\n\n  ${({ $round }) => ($round ? ButtonRounded : null)}\n  ${({ $block }) => ($block ? ButtonBlocked : null)}\n`;\n\nButtonFrame.defaultProps = {\n  size: 'large',\n  $round: false,\n  $block: false,\n};\n","import { rgba } from 'polished';\nimport React from 'react';\nimport styled, { css } from 'styled-components';\n\nimport {\n  ButtonFrame,\n  ButtonFrameProps,\n} from '~/components/atom/ButtonFrame';\nimport { colorBrand } from '~/libs/styles';\n\nexport interface ButtonProps extends ButtonFrameProps {\n  children: React.ReactNode;\n  onClick?: () => void;\n  type?: 'button' | 'submit';\n  color?: 'primary' | 'primary-plain' | 'white' | 'grey' | 'black';\n  disabled?: boolean;\n}\n\nconst ColorPrimary = css`\n  color: white;\n  background-color: var(--color-primary-400);\n  border-color: var(--color-primary-400);\n\n  &:active {\n    background-color: var(--color-primary-500);\n    border-color: var(--color-primary-500);\n  }\n  &:focus {\n    box-shadow: 0 0 0 4px ${rgba(colorBrand, 0.2)};\n  }\n`;\n\nconst ColorPrimaryPlain = css`\n  color: var(--color-primary-400);\n`;\n\nconst ColorBlack = css`\n  color: white;\n  background-color: var(--color-grey-900);\n  border-color: var(--color-grey-900);\n\n  &:active {\n    background-color: var(--color-grey-800);\n    border-color: var(--color-grey-800);\n  }\n`;\n\nconst ColorWhite = css`\n  color: var(--color-primary-400);\n  background-color: white;\n  border-color: white;\n\n  &:active {\n    background-color: var(--color-grey-100);\n    border-color: var(--color-grey-100);\n  }\n`;\n\nexport const Button = styled(ButtonFrame)<ButtonProps>`\n  ${({ color }) => {\n    if (!color) return null;\n\n    switch (color) {\n      case 'primary':\n        return ColorPrimary;\n      case 'primary-plain':\n        return ColorPrimaryPlain;\n      case 'white':\n        return ColorWhite;\n      case 'black':\n        return ColorBlack;\n\n      default:\n        return null;\n    }\n  }}\n\n  ${({ disabled }) => {\n    if (!disabled) return null;\n    return `\n      color: var(--color-grey-400) !important;\n      background-color: var(--color-grey-200) !important;\n      border-color: var(--color-grey-200) !important;\n    `;\n  }}\n`;\n\nButton.defaultProps = {\n  type: 'button',\n  color: 'grey',\n  disabled: false,\n};\n","import styled, { CSSProperties } from 'styled-components';\nimport {\n  compose,\n  color,\n  typography,\n  space,\n  ColorProps,\n  TypographyProps,\n  SpaceProps,\n} from 'styled-system';\n\ninterface Props\n  extends ColorProps,\n    TypographyProps,\n    SpaceProps,\n    Pick<\n      CSSProperties,\n      'wordBreak' | 'whiteSpace' | 'textDecoration'\n    > {}\n\nexport const Text = styled.p<Props>`\n  ${compose(color, typography, space)};\n  ${({ wordBreak }) => (wordBreak ? `word-break: ${wordBreak}` : null)}\n  ${({ whiteSpace }) =>\n    whiteSpace ? `white-space: ${whiteSpace}` : null}\n\n  ${({ textDecoration }) =>\n    textDecoration ? `text-decoration: ${textDecoration}` : null}\n`;\n\nexport const Span = Text.withComponent('span');\n","import styled, { css } from 'styled-components';\n\ninterface Props {\n  color?: 'grey' | 'primary';\n}\n\nconst colorGrey = css`\n  color: var(--color-grey-600);\n  background-color: var(--color-grey-100);\n  border-color: var(--color-grey-100);\n`;\nconst colorPrimary = css`\n  color: var(--color-primary-400);\n  background-color: var(--color-primary-100);\n  border-color: var(--color-primary-100);\n`;\n\nexport const Tag = styled.div<Props>`\n  display: inline-flex;\n  align-items: center;\n  height: 1.75rem;\n  padding: 0 0.5rem;\n\n  font-size: 0.75rem;\n  font-weight: 600;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 6px;\n\n  ${({ color }) => {\n    switch (color) {\n      case 'grey':\n        return colorGrey;\n      case 'primary':\n        return colorPrimary;\n      default:\n        return colorGrey;\n    }\n  }}\n`;\n\nTag.defaultProps = {\n  color: 'grey',\n};\n","import styled from 'styled-components';\nimport { Tag } from './Tag';\n\nexport const TagGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: -0.5rem;\n\n  ${Tag} {\n    margin-right: 0.5rem;\n    margin-bottom: 0.5rem;\n  }\n`;\n","import styled from 'styled-components';\nimport { compose, space, SpaceProps } from 'styled-system';\n\ntype ContainerProps = SpaceProps;\n\nexport const Container = styled.div<ContainerProps>`\n  padding-left: var(--spacing-base);\n  padding-right: var(--spacing-base);\n  margin: 0 auto;\n\n  ${compose(space)}\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n","/* eslint-disable react/require-default-props */\nimport React, {\n  MouseEvent,\n  MouseEventHandler,\n  memo,\n  useMemo,\n} from 'react';\nimport styled from 'styled-components';\n\ninterface ListItemProps {\n  children: React.ReactNode;\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  as?: string | React.ComponentType<any>;\n  href?: string;\n  to?: string;\n  target?: '_blank' | '_self';\n  extraClickable?: boolean;\n  onClick?: MouseEventHandler<HTMLAnchorElement>;\n}\n\nexport const ListItem = memo((props: ListItemProps) => {\n  const {\n    children,\n    left,\n    right,\n    extraClickable,\n    onClick,\n    as,\n    href,\n    to,\n    target,\n  } = props;\n\n  const handleClickItem = (e: MouseEvent<HTMLAnchorElement>) => {\n    if (onClick) onClick(e);\n  };\n\n  const handleClickExtra = (e: MouseEvent<HTMLDivElement>) => {\n    if (!extraClickable) return;\n\n    e.stopPropagation();\n  };\n\n  const template = (\n    <>\n      {left ? <Left onClick={handleClickExtra}>{left}</Left> : null}\n      <Content>{children}</Content>\n      {right ? <Right onClick={handleClickExtra}>{right}</Right> : null}\n    </>\n  );\n\n  const styledProps = useMemo(() => {\n    return {\n      as,\n      href,\n      to,\n      target,\n    };\n  }, [as, href, to, target]);\n\n  return (\n    <Li>\n      <Item {...styledProps} onClick={handleClickItem}>\n        {template}\n      </Item>\n    </Li>\n  );\n});\n\n// ListItem.defaultProps = {\n//   left: null,\n//   right: null,\n//   as: null,\n//   to: null,\n//   href: null,\n//   target: null,\n//   extraClickable: false,\n//   onClick: () => {},\n// };\n\nconst Li = styled.li`\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    margin-left: var(--spacing-base);\n    width: calc(100% - var(--spacing-base));\n    border-bottom: 1px solid var(--color-opacity-100);\n  }\n\n  transition: 0.2s ease;\n\n  &:active {\n    background-color: var(--color-opacity-50);\n  }\n`;\n\nconst Item = styled.a`\n  cursor: pointer;\n  user-select: none;\n\n  display: flex;\n  padding: 1rem var(--spacing-base);\n  color: var(--color-grey-900);\n  text-decoration: none;\n`;\n\nconst Left = styled.div`\n  margin-right: 1rem;\n`;\nconst Content = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst Right = styled.div`\n  margin-left: 1rem;\n`;\n","import styled from 'styled-components';\n\nexport const ListTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 600;\n`;\n","import styled from 'styled-components';\n\nexport const ListDesc = styled.p`\n  margin-top: 0.25rem;\n  color: var(--color-grey-500);\n  font-size: 0.875rem;\n  font-weight: 400;\n`;\n","import React, {\n  useState,\n  useEffect,\n  createContext,\n  useMemo,\n} from 'react';\nimport styled from 'styled-components';\n\nimport { headerDepth } from '~/libs/styles';\n\ntype HeaderProps = {\n  children: React.ReactNode;\n  overlay?: boolean;\n};\n\nexport const HeaderContext = createContext({\n  isScrolled: false,\n});\n\nconst Header = (props: HeaderProps) => {\n  const { children, overlay } = props;\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  useEffect(() => {\n    handleScroll();\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const handleScroll = () => {\n    const scrollTop = window.scrollY;\n\n    if (scrollTop <= 0) {\n      setIsScrolled(false);\n      return;\n    }\n\n    setIsScrolled(true);\n  };\n\n  const memorizedContextValue = useMemo(() => {\n    return { isScrolled };\n  }, [isScrolled]);\n\n  if (!document.getElementById('root')) return null;\n\n  return (\n    <HeaderContext.Provider value={memorizedContextValue}>\n      <FixedBlock>\n        <StyledHeader overlay={overlay} isScrolled={isScrolled}>\n          {children}\n        </StyledHeader>\n      </FixedBlock>\n\n      {overlay ? null : <HeaderSpacer />}\n    </HeaderContext.Provider>\n  );\n};\n\nHeader.defaultProps = {\n  overlay: false,\n};\n\ntype styleProps = {\n  overlay?: boolean;\n  isScrolled: boolean;\n};\n\nconst FixedBlock = styled.header`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: ${headerDepth};\n  width: 100%;\n`;\n\nconst StyledHeader = styled.div<styleProps>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: var(--container-width);\n  height: var(--header-height);\n  padding-left: var(--spacing-base);\n  padding-right: var(--spacing-base);\n  margin: 0 auto;\n\n  background: var(--color-float-background);\n  transition: 0.2s ease;\n\n  ${({ overlay, isScrolled }) =>\n    overlay && !isScrolled\n      ? `\n          --header-text-color: white;\n          color: var(--header-text-color);\n          background: rgba(0, 0, 0, 0);\n          backdrop-filter: none;\n          box-shadow: none;\n        `\n      : null}\n\n  ${({ isScrolled }) =>\n    isScrolled\n      ? `\n      box-shadow: var(--color-opacity-100) 0 1px;\n      background: var(--color-float-background);\n    `\n      : null}\n`;\n\nconst HeaderSpacer = styled.div`\n  height: var(--header-height);\n`;\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport styled, { css } from 'styled-components';\nimport { HeaderContext } from './Header';\n\ninterface Props {\n  children: React.ReactNode;\n  center?: boolean;\n}\n\nconst HeaderTitle = (props: Props) => {\n  const { children, center } = props;\n  const { isScrolled } = useContext(HeaderContext);\n\n  return (\n    <StyledText isScrolled={isScrolled} center={center}>\n      {children}\n    </StyledText>\n  );\n};\n\nHeaderTitle.defaultProps = {\n  center: false,\n};\n\nconst centeredTitleStyle = css`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n\n  display: flex;\n  align-items: center;\n  height: var(--header-height);\n\n  font-size: 1rem;\n`;\nconst StyledText = styled.div<{\n  isScrolled?: boolean;\n  center?: boolean;\n}>`\n  font-size: 1.125rem;\n  font-weight: 700;\n\n  transition: opacity 0.2s ease;\n\n  ${({ center }) => {\n    if (!center) return null;\n    return centeredTitleStyle;\n  }}\n\n  ${({ isScrolled }) => {\n    if (!isScrolled) return `opacity: 0;`;\n    return `opacity: 1;`;\n  }}\n`;\n\nexport default HeaderTitle;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { HiOutlineChevronLeft } from 'react-icons/hi';\nimport { headerHeight } from '~/libs/styles';\n\nconst HeaderBack = () => {\n  const navigate = useNavigate();\n\n  const onClickBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <ClickableArea onClick={onClickBack}>\n      <FakeButton>\n        <HiOutlineChevronLeft />\n      </FakeButton>\n    </ClickableArea>\n  );\n};\n\nconst FakeButton = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: ${headerHeight - 12}px;\n  height: ${headerHeight - 12}px;\n\n  color: var(--color-grey-900);\n  color: var(--header-text-color);\n\n  font-size: 1.625rem;\n  font-weight: 700;\n\n  border-radius: 12px;\n  transition: background 0.2s ease, transform 0.3s ease;\n`;\n\nconst ClickableArea = styled.a`\n  cursor: pointer;\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  height: 100%;\n  padding-left: 0.375rem;\n  margin-left: calc(var(--spacing-base) * -1);\n\n  &:active {\n    ${FakeButton} {\n      color: var(--color-grey-700);\n      background-color: var(--color-grey-100);\n      transform: scale(0.85);\n      svg > {\n        transform: scale(0.95);\n      }\n    }\n  }\n`;\n\nexport default HeaderBack;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { headerHeight } from '~/libs/styles';\nimport styled from 'styled-components';\n\ntype Props = {\n  children: React.ReactNode;\n  to?: string;\n  replace?: boolean;\n  onClick?: () => void;\n};\n\nconst HeaderIcon = (props: Props) => {\n  const { children, to, replace, onClick } = props;\n\n  return (\n    <Icon to={to ?? ''} onClick={onClick} replace={replace}>\n      {children}\n    </Icon>\n  );\n};\n\nHeaderIcon.defaultProps = {\n  to: '',\n  replace: false,\n  onClick: undefined,\n};\n\nconst Icon = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${headerHeight - 12}px;\n  height: ${headerHeight - 12}px;\n\n  color: var(--color-grey-900);\n  color: var(--header-text-color);\n  font-size: 1rem;\n  font-weight: 600;\n  text-decoration: none;\n  border-radius: 12px;\n\n  transition: background 0.2s ease, transform 0.3s ease;\n\n  &:not(:last-child) {\n    margin-right: 0.25rem;\n  }\n\n  &:last-child {\n    margin-right: -0.5rem;\n  }\n\n  & > svg {\n    font-size: 1.375rem;\n    transition: transform 0.3s ease;\n  }\n\n  &:active {\n    color: var(--color-grey-700);\n    background-color: var(--color-grey-100);\n    transform: scale(0.85);\n\n    svg > {\n      transform: scale(0.95);\n    }\n  }\n`;\n\nexport default HeaderIcon;\n","import React from 'react';\nimport { SpaceProps } from 'styled-system';\nimport { Text } from '~/components/atom';\n\ninterface Props extends SpaceProps {\n  children: React.ReactNode;\n}\nexport const Headline = (props: Props) => {\n  const { children } = props;\n\n  return (\n    <Text\n      as=\"h1\"\n      fontSize=\"1.5rem\"\n      fontWeight={700}\n      lineHeight={1.3}\n      mb=\"2rem\"\n      {...props}\n    >\n      {children}\n    </Text>\n  );\n};\n","import React, { ChangeEventHandler } from 'react';\nimport styled from 'styled-components';\nimport { GoCheck } from 'react-icons/go';\nimport { rgba } from 'polished';\nimport { colorBrand } from '~/libs/styles';\n\ninterface CheckboxProps {\n  name?: string;\n  checked: boolean;\n  children?: React.ReactNode;\n  required?: boolean;\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const { checked, name, onChange, children, required } = props;\n\n  return (\n    <StyledLabel checked={checked}>\n      <StyledCheckboxInput\n        type=\"checkbox\"\n        name={name}\n        checked={checked}\n        onChange={(e) => (onChange ? onChange(e) : null)}\n        required={required}\n      />\n      <CheckboxBlock checked={checked}>\n        {checked ? <GoCheck /> : null}\n      </CheckboxBlock>\n      {children ? (\n        <CheckboxText checked={checked}>{children}</CheckboxText>\n      ) : null}\n    </StyledLabel>\n  );\n};\n\nCheckbox.defaultProps = {\n  name: null,\n  required: false,\n  children: null,\n  onChange: () => {},\n};\n\nconst CheckboxBlock = styled.div<{ checked: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 1.75rem;\n  height: 1.75rem;\n\n  color: white;\n  font-size: 1.125rem;\n  border-radius: 100%;\n  border-width: 1px;\n  border-style: solid;\n  transition: 0.15s ease;\n\n  ${({ checked }) => {\n    if (!checked)\n      return `\n      background-color: var(--color-background);\n      border-color: var(--color-grey-200);\n      &:active {\n        background-color: var(--color-grey-100);\n        border-color: var(--color-grey-300);\n      }\n    `;\n\n    return `\n      background-color: var(--color-primary-400);\n      border-color: var(--color-primary-400);\n      &:active {\n        background-color: var(--color-primary-500);\n        border-color: var(--color-primary-500);\n      }\n    `;\n  }}\n`;\n\nconst CheckboxText = styled.div<{ checked: boolean }>`\n  display: inline-block;\n\n  font-size: 1rem;\n  font-weight: 500;\n  margin-left: 0.5rem;\n  transition: 0.15s ease;\n`;\n\nconst StyledLabel = styled.label<{ checked: boolean }>`\n  position: relative;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n\n  &:focus-within {\n    ${CheckboxBlock} {\n      border-color: var(--color-primary-400);\n      box-shadow: 0 0 0 4px ${rgba(colorBrand, 0.2)};\n    }\n  }\n\n  &:hover {\n    ${CheckboxText} {\n      color: var(--color-grey-600);\n    }\n  }\n\n  ${CheckboxText} {\n    color: ${({ checked }) =>\n      checked\n        ? 'var(--color-primary-400) !important'\n        : 'var(--color-grey-500)'};\n  }\n`;\n\nconst StyledCheckboxInput = styled.input`\n  position: absolute;\n  bottom: 0;\n  left: 2px;\n  opacity: 0;\n  pointer-events: none;\n`;\n","import { useContext } from 'react';\nimport { ToastContext } from '../ToastContext';\n\nexport const useToast = () => useContext(ToastContext);\n","import React, { ChangeEventHandler, useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { Box, Input } from '~/components/atom';\nimport { InputProps, Textarea } from '~/components/atom/Input';\n\ninterface TextInputProps extends InputProps {\n  mode?: 'input' | 'textarea';\n  type?: React.HTMLInputTypeAttribute;\n  name: string;\n  label?: string;\n  value?: string;\n  placeholder?: string;\n  required?: boolean;\n  onChange: ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n}\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    type,\n    name,\n    label,\n    value,\n    placeholder,\n    block,\n    mode,\n    required,\n    onChange,\n  } = props;\n\n  const inputProps = useMemo(() => {\n    return {\n      type,\n      name,\n      label,\n      value,\n      placeholder,\n      block,\n      required,\n      onChange,\n    };\n  }, [\n    type,\n    name,\n    label,\n    value,\n    placeholder,\n    block,\n    required,\n    onChange,\n  ]);\n\n  return (\n    <InputWrap>\n      {!!label && (\n        <Box\n          color=\"var(--color-grey-600)\"\n          fontSize={1}\n          fontWeight={600}\n        >\n          {label}\n        </Box>\n      )}\n\n      <InputBlock block={block}>\n        {mode === 'input' && <Input {...inputProps} />}\n        {mode === 'textarea' && <Textarea {...inputProps} />}\n      </InputBlock>\n    </InputWrap>\n  );\n};\n\nTextInput.defaultProps = {\n  type: 'text',\n  mode: 'input',\n  label: '',\n  value: '',\n  placeholder: '',\n  required: false,\n};\n\ntype CommonStyledProps = Partial<TextInputProps>;\n\nconst InputWrap = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst InputBlock = styled.div<CommonStyledProps>`\n  position: relative;\n  display: ${({ block }) => (block ? 'block' : 'inline-block')};\n  border-bottom: 1px solid var(--color-grey-100);\n\n  &::after {\n    content: '';\n    position: absolute;\n    z-index: 1;\n    left: 0;\n    bottom: -1px;\n    width: 100%;\n    border-bottom: 2px solid transparent;\n    transition: border-bottom-color 0.2s ease;\n  }\n\n  &:focus-within::after {\n    border-bottom-color: var(--color-primary-400);\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Box, Button, Container } from '~/components/atom';\nimport { ButtonProps } from '~/components/atom/Button';\nimport { navDepth } from '~/libs/styles';\n\ntype FloatingCTAProps = ButtonProps;\n\nexport const FloatingCTA = (props: FloatingCTAProps) => {\n  return (\n    <Block>\n      <Container>\n        <Box py=\"1rem\">\n          <Button {...props} $block />\n        </Box>\n      </Container>\n    </Block>\n  );\n};\n\nconst Block = styled.div`\n  position: fixed;\n  z-index: ${navDepth};\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  padding-bottom: 1rem;\n  padding-bottom: env(safe-area-inset-bottom);\n  background-color: var(--color-background);\n`;\n","import React from 'react';\nimport { Box, Container } from '~/components/atom';\n\nexport interface SectionProps {\n  title: string | React.ReactNode;\n  extra?: React.ReactNode;\n  children: React.ReactNode;\n  container?: boolean;\n}\n\nexport const Section = (props: SectionProps) => {\n  const { title, extra, children, container } = props;\n\n  return (\n    <Box\n      as=\"section\"\n      pt=\"2rem\"\n      pb=\"3rem\"\n      borderBottom=\"8px solid var(--color-grey-background)\"\n    >\n      <Container>\n        <Box display=\"flex\" alignItems=\"center\" pb=\"1.25rem\">\n          <Box\n            as=\"h2\"\n            flex={1}\n            fontSize=\"1.25rem\"\n            fontWeight={700}\n            lineHeight={1.4}\n          >\n            {title}\n          </Box>\n\n          {extra}\n        </Box>\n      </Container>\n\n      {container ? <Container>{children}</Container> : children}\n    </Box>\n  );\n};\n\nSection.defaultProps = {\n  container: false,\n  extra: null,\n};\n","/**\n * External imports\n */\nimport React, { ChangeEventHandler, MouseEvent, useMemo } from 'react';\nimport { Link, generatePath } from 'react-router-dom';\nimport { RiCloseFill } from 'react-icons/ri';\nimport styled, { css } from 'styled-components';\nimport dayjs from 'dayjs';\n\n/**\n * Internal imports\n */\nimport type { Todo } from '~/models';\nimport { Checkbox, ListDesc, ListItem, ListTitle } from '../common';\nimport { ChangeTodoHandler, RemoveTodoHandler } from './hooks/useTodo';\n\ninterface TodoListItemProps extends Todo {\n  onChange: ChangeTodoHandler;\n  onRemove: RemoveTodoHandler;\n}\n\nexport const TodoListItem = (props: TodoListItemProps) => {\n  const { id, title, dueDate, isCompleted, onChange, onRemove } = props;\n\n  const handleChangeIsCompleted: ChangeEventHandler<\n    HTMLInputElement\n  > = (e) => {\n    onChange(id, {\n      isCompleted: e.target.checked,\n    });\n  };\n\n  const handleClickClose = (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    onRemove(id);\n  };\n\n  const isAfter = useMemo(() => {\n    if (dayjs().isAfter(dueDate, 'day')) return true;\n    if (dayjs().isSame(dueDate, 'day')) return true;\n    return false;\n  }, [dueDate]);\n\n  const todoPath = useMemo(() => {\n    return generatePath('/todo/:todoId', {\n      todoId: id,\n    });\n  }, [id]);\n\n  return (\n    <ListItem\n      extraClickable\n      as={Link}\n      to={todoPath}\n      left={\n        <Checkbox\n          checked={isCompleted}\n          onChange={handleChangeIsCompleted}\n        />\n      }\n      right={\n        <CloseButton onClick={handleClickClose}>\n          <RiCloseFill />\n        </CloseButton>\n      }\n    >\n      <StyledTitle isCompleted={isCompleted} isAfter={isAfter}>\n        {title}\n      </StyledTitle>\n\n      {!!dueDate && (\n        <StyledDesc isCompleted={isCompleted} isAfter={isAfter}>\n          기한: {dayjs(dueDate).format('YYYY.MM.DD')}\n        </StyledDesc>\n      )}\n    </ListItem>\n  );\n};\n\ninterface CommonStyledProps\n  extends Partial<Pick<TodoListItemProps, 'isCompleted'>> {\n  isAfter?: boolean;\n}\n\nconst isAfterTextStyle = css<CommonStyledProps>`\n  ${({ isAfter, isCompleted }) => {\n    if (!isAfter) return null;\n    if (isCompleted) return null;\n    return `\n      color: #fa5252;\n    `;\n  }}\n`;\n\nconst StyledTitle = styled(ListTitle)<CommonStyledProps>`\n  ${isAfterTextStyle}\n\n  ${({ isCompleted }) => {\n    if (!isCompleted) return null;\n    return `\n      color: var(--color-grey-600);\n      text-decoration: line-through;\n    `;\n  }}\n`;\n\nconst StyledDesc = styled(ListDesc)`\n  ${isAfterTextStyle}\n`;\n\nconst CloseButton = styled.button`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 2.5rem;\n  height: 2.5rem;\n  height: 100%;\n\n  padding: 0;\n  margin: 0;\n\n  color: var(--color-grey-600);\n  font-size: 1.5rem;\n\n  border: 2px solid transparent;\n  outline: none;\n  background-color: transparent;\n  border-radius: 12px;\n\n  transition: background-color 0.2s ease, border-color 0.2s ease;\n\n  &:active {\n    background-color: var(--color-grey-100);\n    border-color: var(--color-grey-100);\n  }\n  &:focus {\n    border-color: var(--color-grey-200);\n  }\n`;\n","/**\n * External imports\n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n * Internal imports\n */\nimport { Button, Container } from '~/components/atom';\nimport { List, Section } from '~/components/common';\nimport { TodoListItem } from './TodoListItem';\nimport { useTodo } from './hooks/useTodo';\n\nexport const TodoList = () => {\n  const { todos, modifyTodo, removeTodo } = useTodo();\n\n  return (\n    <Section title=\"이번주 할 일\">\n      <Container mb={2}>\n        <Button as={Link} to=\"/todo/create\" color=\"primary\" $block>\n          할 일 추가\n        </Button>\n      </Container>\n\n      <List>\n        {todos.map((todo) => (\n          <TodoListItem\n            key={todo.id}\n            {...todo}\n            onChange={modifyTodo}\n            onRemove={removeTodo}\n          />\n        ))}\n      </List>\n    </Section>\n  );\n};\n","import { atom, selector } from 'recoil';\nimport { Todo } from '~/models';\n\nexport const todosState = atom<Todo[]>({\n  key: 'todosState',\n  default: selector({\n    key: 'todosState/Default',\n    get: () => {\n      const gettedCachedTodos = localStorage.getItem('todos') ?? '[]';\n      return JSON.parse(gettedCachedTodos);\n    },\n  }),\n});\n","import { useMemo } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Todo } from '~/models';\nimport { todosState } from '~/states/todoState';\n\nexport type TodoSuccessCallback = (newData: Todo) => void;\n\nexport type ChangeTodoHandler = (\n  targetId: string,\n  changeValue: Partial<Omit<Todo, 'id'>>,\n  successCallback?: () => void,\n) => void;\n\nexport type RemoveTodoHandler = (targetId: string) => void;\n\nexport const useTodo = () => {\n  const [todos, setTodos] = useRecoilState(todosState);\n\n  const setTodosCache = (newTodos: Todo[]) => {\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n  };\n\n  const findTodoById = (todoId: string) => {\n    return todos.find((e) => e.id === todoId);\n  };\n\n  const appendTodo = (\n    todoData: Omit<Todo, 'id'>,\n    successCallback?: TodoSuccessCallback,\n  ) => {\n    const newTodoData: Todo = {\n      ...todoData,\n      id: uuidv4(),\n      isCompleted: false,\n    };\n    setTodos((prev) => {\n      const newTodos = [...prev, newTodoData];\n      setTodosCache(newTodos);\n      return newTodos;\n    });\n\n    if (successCallback) successCallback(newTodoData);\n  };\n\n  const modifyTodo: ChangeTodoHandler = (\n    targetId,\n    changeValue,\n    successCallback,\n  ) => {\n    setTodos((prev) => {\n      const newTodos = prev.map((todo) => {\n        if (todo.id !== targetId) return todo;\n\n        return {\n          ...todo,\n          ...changeValue,\n        };\n      });\n\n      setTodosCache(newTodos);\n      return newTodos;\n    });\n\n    if (successCallback) successCallback();\n  };\n\n  const removeTodo = (targetId: string) => {\n    setTodos((prev) => {\n      const newTodos = prev.filter((todo) => todo.id !== targetId);\n      setTodosCache(newTodos);\n      return newTodos;\n    });\n  };\n\n  const computedTodos = useMemo(() => {\n    return [...todos].reverse();\n  }, [todos]);\n\n  return {\n    todos: computedTodos,\n    findTodoById,\n    appendTodo,\n    modifyTodo,\n    removeTodo,\n  };\n};\n"],"names":["BaseStyle","css","block","Input","styled","Textarea","withComponent","Box","compose","position","space","typography","shadow","background","border","flexbox","layout","color","ButtonRounded","ButtonBlocked","ButtonSizeXlarge","ButtonSizeLarge","ButtonSizeMedium","ButtonSizeSmall","ButtonFrame","size","$round","$block","defaultProps","ColorPrimary","rgba","colorBrand","ColorPrimaryPlain","ColorBlack","ColorWhite","Button","disabled","type","Text","wordBreak","whiteSpace","textDecoration","Span","colorGrey","colorPrimary","Tag","Container","List","ListItem","memo","props","children","left","right","extraClickable","onClick","as","href","to","target","handleClickExtra","e","stopPropagation","template","Left","Content","Right","styledProps","useMemo","Li","Item","ListTitle","ListDesc","HeaderContext","createContext","isScrolled","Header","overlay","useState","setIsScrolled","useEffect","handleScroll","window","addEventListener","removeEventListener","scrollY","memorizedContextValue","document","getElementById","Provider","value","FixedBlock","StyledHeader","HeaderSpacer","headerDepth","HeaderTitle","center","useContext","StyledText","centeredTitleStyle","FakeButton","headerHeight","ClickableArea","navigate","useNavigate","HeaderIcon","replace","Icon","undefined","Link","Headline","fontSize","fontWeight","lineHeight","mb","Checkbox","checked","name","onChange","required","StyledLabel","StyledCheckboxInput","CheckboxBlock","CheckboxText","useToast","ToastContext","TextInput","label","placeholder","mode","inputProps","InputWrap","InputBlock","FloatingCTA","Block","py","navDepth","Section","title","extra","container","pt","pb","borderBottom","display","alignItems","flex","TodoListItem","id","dueDate","isCompleted","onRemove","isAfter","dayjs","isSame","todoPath","generatePath","todoId","CloseButton","preventDefault","StyledTitle","StyledDesc","format","isAfterTextStyle","TodoList","useTodo","todos","modifyTodo","removeTodo","map","todo","todosState","atom","key","default","selector","get","gettedCachedTodos","localStorage","getItem","JSON","parse","useRecoilState","setTodos","setTodosCache","newTodos","setItem","stringify","reverse","findTodoById","find","appendTodo","todoData","successCallback","newTodoData","uuidv4","prev","targetId","changeValue","filter"],"sourceRoot":""}